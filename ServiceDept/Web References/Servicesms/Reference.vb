'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Servicesms
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="SMSCountry WebService")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendTextSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendUnicodeSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendPictureSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendBinarySMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendRingToneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendLOGOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendWapPushOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendFlashSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetbalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private sendMultiSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ServiceDept.My.MySettings.Default.ServiceDept_Servicesms_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendTextSMSCompleted As SendTextSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendUnicodeSMSCompleted As SendUnicodeSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendPictureSMSCompleted As SendPictureSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendBinarySMSCompleted As SendBinarySMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendRingToneCompleted As SendRingToneCompletedEventHandler
        
        '''<remarks/>
        Public Event SendLOGOCompleted As SendLOGOCompletedEventHandler
        
        '''<remarks/>
        Public Event SendWapPushCompleted As SendWapPushCompletedEventHandler
        
        '''<remarks/>
        Public Event SendFlashSMSCompleted As SendFlashSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetbalanceCompleted As GetbalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryReportCompleted As GetDeliveryReportCompletedEventHandler
        
        '''<remarks/>
        Public Event sendMultiSMSCompleted As sendMultiSMSCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendTextSMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendTextSMS(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String) As String
            Dim results() As Object = Me.Invoke("SendTextSMS", New Object() {username, password, mobilenumbers, message, senderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendTextSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String)
            Me.SendTextSMSAsync(username, password, mobilenumbers, message, senderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendTextSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String, ByVal userState As Object)
            If (Me.SendTextSMSOperationCompleted Is Nothing) Then
                Me.SendTextSMSOperationCompleted = AddressOf Me.OnSendTextSMSOperationCompleted
            End If
            Me.InvokeAsync("SendTextSMS", New Object() {username, password, mobilenumbers, message, senderID}, Me.SendTextSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendTextSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendTextSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendTextSMSCompleted(Me, New SendTextSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendUnicodeSMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendUnicodeSMS(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String) As String
            Dim results() As Object = Me.Invoke("SendUnicodeSMS", New Object() {username, password, mobilenumbers, message, senderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendUnicodeSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String)
            Me.SendUnicodeSMSAsync(username, password, mobilenumbers, message, senderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendUnicodeSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal senderID As String, ByVal userState As Object)
            If (Me.SendUnicodeSMSOperationCompleted Is Nothing) Then
                Me.SendUnicodeSMSOperationCompleted = AddressOf Me.OnSendUnicodeSMSOperationCompleted
            End If
            Me.InvokeAsync("SendUnicodeSMS", New Object() {username, password, mobilenumbers, message, senderID}, Me.SendUnicodeSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendUnicodeSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendUnicodeSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendUnicodeSMSCompleted(Me, New SendUnicodeSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendPictureSMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendPictureSMS(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String) As String
            Dim results() As Object = Me.Invoke("SendPictureSMS", New Object() {username, password, mobilenumbers, message, SenderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendPictureSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String)
            Me.SendPictureSMSAsync(username, password, mobilenumbers, message, SenderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendPictureSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal userState As Object)
            If (Me.SendPictureSMSOperationCompleted Is Nothing) Then
                Me.SendPictureSMSOperationCompleted = AddressOf Me.OnSendPictureSMSOperationCompleted
            End If
            Me.InvokeAsync("SendPictureSMS", New Object() {username, password, mobilenumbers, message, SenderID}, Me.SendPictureSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendPictureSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendPictureSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendPictureSMSCompleted(Me, New SendPictureSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendBinarySMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendBinarySMS(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String) As String
            Dim results() As Object = Me.Invoke("SendBinarySMS", New Object() {username, password, mobilenumbers, message, SenderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendBinarySMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String)
            Me.SendBinarySMSAsync(username, password, mobilenumbers, message, SenderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendBinarySMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal userState As Object)
            If (Me.SendBinarySMSOperationCompleted Is Nothing) Then
                Me.SendBinarySMSOperationCompleted = AddressOf Me.OnSendBinarySMSOperationCompleted
            End If
            Me.InvokeAsync("SendBinarySMS", New Object() {username, password, mobilenumbers, message, SenderID}, Me.SendBinarySMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendBinarySMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendBinarySMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendBinarySMSCompleted(Me, New SendBinarySMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendRingTone", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendRingTone(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String) As String
            Dim results() As Object = Me.Invoke("SendRingTone", New Object() {username, password, mobilenumbers, message, SenderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendRingToneAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String)
            Me.SendRingToneAsync(username, password, mobilenumbers, message, SenderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendRingToneAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal userState As Object)
            If (Me.SendRingToneOperationCompleted Is Nothing) Then
                Me.SendRingToneOperationCompleted = AddressOf Me.OnSendRingToneOperationCompleted
            End If
            Me.InvokeAsync("SendRingTone", New Object() {username, password, mobilenumbers, message, SenderID}, Me.SendRingToneOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendRingToneOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendRingToneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendRingToneCompleted(Me, New SendRingToneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendLOGO", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendLOGO(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String) As String
            Dim results() As Object = Me.Invoke("SendLOGO", New Object() {username, password, mobilenumbers, message, SenderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendLOGOAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String)
            Me.SendLOGOAsync(username, password, mobilenumbers, message, SenderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendLOGOAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal userState As Object)
            If (Me.SendLOGOOperationCompleted Is Nothing) Then
                Me.SendLOGOOperationCompleted = AddressOf Me.OnSendLOGOOperationCompleted
            End If
            Me.InvokeAsync("SendLOGO", New Object() {username, password, mobilenumbers, message, SenderID}, Me.SendLOGOOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendLOGOOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendLOGOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendLOGOCompleted(Me, New SendLOGOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendWapPush", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendWapPush(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal WapUrl As String) As String
            Dim results() As Object = Me.Invoke("SendWapPush", New Object() {username, password, mobilenumbers, message, SenderID, WapUrl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendWapPushAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal WapUrl As String)
            Me.SendWapPushAsync(username, password, mobilenumbers, message, SenderID, WapUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendWapPushAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal WapUrl As String, ByVal userState As Object)
            If (Me.SendWapPushOperationCompleted Is Nothing) Then
                Me.SendWapPushOperationCompleted = AddressOf Me.OnSendWapPushOperationCompleted
            End If
            Me.InvokeAsync("SendWapPush", New Object() {username, password, mobilenumbers, message, SenderID, WapUrl}, Me.SendWapPushOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendWapPushOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendWapPushCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendWapPushCompleted(Me, New SendWapPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/SendFlashSMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendFlashSMS(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String) As String
            Dim results() As Object = Me.Invoke("SendFlashSMS", New Object() {username, password, mobilenumbers, message, SenderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendFlashSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String)
            Me.SendFlashSMSAsync(username, password, mobilenumbers, message, SenderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendFlashSMSAsync(ByVal username As String, ByVal password As String, ByVal mobilenumbers As String, ByVal message As String, ByVal SenderID As String, ByVal userState As Object)
            If (Me.SendFlashSMSOperationCompleted Is Nothing) Then
                Me.SendFlashSMSOperationCompleted = AddressOf Me.OnSendFlashSMSOperationCompleted
            End If
            Me.InvokeAsync("SendFlashSMS", New Object() {username, password, mobilenumbers, message, SenderID}, Me.SendFlashSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendFlashSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendFlashSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendFlashSMSCompleted(Me, New SendFlashSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/Getbalance", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Getbalance(ByVal username As String, ByVal password As String) As String
            Dim results() As Object = Me.Invoke("Getbalance", New Object() {username, password})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetbalanceAsync(ByVal username As String, ByVal password As String)
            Me.GetbalanceAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetbalanceAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetbalanceOperationCompleted Is Nothing) Then
                Me.GetbalanceOperationCompleted = AddressOf Me.OnGetbalanceOperationCompleted
            End If
            Me.InvokeAsync("Getbalance", New Object() {username, password}, Me.GetbalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetbalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetbalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetbalanceCompleted(Me, New GetbalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/GetDeliveryReport", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryReport(ByVal username As String, ByVal password As String, ByVal SMS_Job_No As ULong) As String
            Dim results() As Object = Me.Invoke("GetDeliveryReport", New Object() {username, password, SMS_Job_No})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryReportAsync(ByVal username As String, ByVal password As String, ByVal SMS_Job_No As ULong)
            Me.GetDeliveryReportAsync(username, password, SMS_Job_No, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryReportAsync(ByVal username As String, ByVal password As String, ByVal SMS_Job_No As ULong, ByVal userState As Object)
            If (Me.GetDeliveryReportOperationCompleted Is Nothing) Then
                Me.GetDeliveryReportOperationCompleted = AddressOf Me.OnGetDeliveryReportOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryReport", New Object() {username, password, SMS_Job_No}, Me.GetDeliveryReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryReportCompleted(Me, New GetDeliveryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("SMSCountry WebService/sendMultiSMS", RequestNamespace:="SMSCountry WebService", ResponseNamespace:="SMSCountry WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function sendMultiSMS(ByVal user As String, ByVal password As String, ByVal MNO_MSG As String, ByVal sid As String, ByVal mtype As String, ByVal dr As Char, ByVal wapurl As String) As String
            Dim results() As Object = Me.Invoke("sendMultiSMS", New Object() {user, password, MNO_MSG, sid, mtype, dr, wapurl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub sendMultiSMSAsync(ByVal user As String, ByVal password As String, ByVal MNO_MSG As String, ByVal sid As String, ByVal mtype As String, ByVal dr As Char, ByVal wapurl As String)
            Me.sendMultiSMSAsync(user, password, MNO_MSG, sid, mtype, dr, wapurl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub sendMultiSMSAsync(ByVal user As String, ByVal password As String, ByVal MNO_MSG As String, ByVal sid As String, ByVal mtype As String, ByVal dr As Char, ByVal wapurl As String, ByVal userState As Object)
            If (Me.sendMultiSMSOperationCompleted Is Nothing) Then
                Me.sendMultiSMSOperationCompleted = AddressOf Me.OnsendMultiSMSOperationCompleted
            End If
            Me.InvokeAsync("sendMultiSMS", New Object() {user, password, MNO_MSG, sid, mtype, dr, wapurl}, Me.sendMultiSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnsendMultiSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.sendMultiSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent sendMultiSMSCompleted(Me, New sendMultiSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendTextSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendTextSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendTextSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendUnicodeSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendUnicodeSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendUnicodeSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendPictureSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendPictureSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendPictureSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendBinarySMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendBinarySMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendBinarySMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendRingToneCompletedEventHandler(ByVal sender As Object, ByVal e As SendRingToneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendRingToneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendLOGOCompletedEventHandler(ByVal sender As Object, ByVal e As SendLOGOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendLOGOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendWapPushCompletedEventHandler(ByVal sender As Object, ByVal e As SendWapPushCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendWapPushCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub SendFlashSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendFlashSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendFlashSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub GetbalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetbalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetbalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub GetDeliveryReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub sendMultiSMSCompletedEventHandler(ByVal sender As Object, ByVal e As sendMultiSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class sendMultiSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
